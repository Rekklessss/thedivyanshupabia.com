---
- hosts: web
  become: yes
  vars:
    container_name: thedivyanshupabia.com  # Set your container name here
    certbot_cert_path: "/etc/letsencrypt/live/thedivyanshupabia.com"

  tasks:
    - name: Update yum cache and install Docker
      yum:
        name: docker
        state: present
      register: yum_result

    - name: Ensure Docker is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Stop Nginx service if running
      systemd:
        name: nginx
        state: stopped
      ignore_errors: yes

    - name: Stop and remove old container if exists
      shell: |
        docker ps -q --filter "name={{ container_name }}" | grep -q . && docker stop {{ container_name }} || true
        docker ps -a -q --filter "name={{ container_name }}" | grep -q . && docker rm {{ container_name }} || true
      ignore_errors: yes

    - name: Check if SSL certificate exists
      stat:
        path: "{{ certbot_cert_path }}/fullchain.pem"
      register: ssl_cert

    - name: Renew SSL certificate if expired
      shell: certbot renew --quiet
      when: ssl_cert.stat.exists
      register: cert_renew
      changed_when: cert_renew.rc == 0

    - name: Log in to GitHub Container Registry
      shell: echo "{{ lookup('env', 'GHCR_TOKEN') }}" | docker login ghcr.io -u {{ lookup('env', 'GHCR_USERNAME') }} --password-stdin
      environment:
        GHCR_USERNAME: "{{ lookup('env', 'GHCR_USERNAME') }}"
        GHCR_TOKEN: "{{ lookup('env', 'GHCR_TOKEN') }}"

    - name: Pull the latest Docker image
      command: "docker pull ghcr.io/{{ lookup('env', 'GHCR_REPOSITORY_OWNER') }}/{{ lookup('env', 'GHCR_REPOSITORY') }}:latest"

    - name: Stop and remove old container if exists
      shell: |
        docker ps -q --filter "name={{ container_name }}" | grep -q . && docker stop {{ container_name }} || true
        docker ps -a -q --filter "name={{ container_name }}" | grep -q . && docker rm -f {{ container_name }} || true
      ignore_errors: yes

    - name: Ensure port 443 is not in use before running the container
      shell: fuser -k 443/tcp || true
      ignore_errors: yes

    - name: Run the new container with mounted SSL files
      command: >
        docker run -d -p 80:80 -p 443:443
        --name {{ container_name }}
        -v /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
        -v /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
        -v {{ certbot_cert_path }}/fullchain.pem:{{ certbot_cert_path }}/fullchain.pem
        -v {{ certbot_cert_path }}/privkey.pem:{{ certbot_cert_path }}/privkey.pem
        ghcr.io/{{ lookup('env', 'GHCR_REPOSITORY_OWNER') }}/{{ lookup('env', 'GHCR_REPOSITORY') }}:latest
      environment:
        GHCR_USERNAME: "{{ lookup('env', 'GHCR_USERNAME') }}"
        GHCR_TOKEN: "{{ lookup('env', 'GHCR_TOKEN') }}"
        GHCR_REPOSITORY_OWNER: "{{ lookup('env', 'GHCR_REPOSITORY_OWNER') }}"
        GHCR_REPOSITORY: "{{ lookup('env', 'GHCR_REPOSITORY') }}"

  handlers:
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
      when: cert_renew.changed